/*
 * Copyright (c) Shadow client, Saturn5VFive and contributors 2022. All rights reserved.
 */

package net.shadow.client.feature.module.impl.exploit;

import net.minecraft.client.util.math.MatrixStack;
import net.minecraft.network.packet.c2s.play.ClickSlotC2SPacket;
import net.minecraft.screen.slot.SlotActionType;
import net.shadow.client.feature.module.Module;
import net.shadow.client.feature.module.ModuleType;
import net.shadow.client.helper.event.EventListener;
import net.shadow.client.helper.event.EventType;
import net.shadow.client.helper.event.events.PacketEvent;

public class Equipper extends Module {

    public Equipper() {
        super("Equipper", "Equips anything as armor", ModuleType.EXPLOIT);
    }

    @EventListener(type = EventType.PACKET_SEND)
    void giveAShit(PacketEvent event) {
        if (event.getPacket() instanceof ClickSlotC2SPacket packet) {
            if (packet.getActionType() == SlotActionType.PICKUP && packet.getButton() == 0 && packet.getSlot() >= 5 && packet.getSlot() <= 8) {
                int slot = packet.getSlot() - 5;
                int saveslot = getSaveSlot();
                event.setCancelled(true);
                client.interactionManager.clickSlot(client.player.currentScreenHandler.syncId, saveslot, 0, SlotActionType.PICKUP, client.player);
                client.interactionManager.clickSlot(client.player.currentScreenHandler.syncId, saveslot, 39 - slot, SlotActionType.SWAP, client.player);
                client.interactionManager.clickSlot(client.player.currentScreenHandler.syncId, saveslot, 0, SlotActionType.PICKUP, client.player);
            }
        }
    }

    private int getSaveSlot() {
        for (int i = 0; i < 9; i++) {
            if (!client.player.getInventory().getStack(i).isEmpty()) continue;

            return i + 36;
        }
        return 36;
    }

    @Override
    public void tick() {

    }

    @Override
    public void enable() {
    }

    @Override
    public void disable() {
    }

    @Override
    public String getContext() {
        return null;
    }

    @Override
    public void onWorldRender(MatrixStack matrices) {

    }

    @Override
    public void onHudRender() {

    }
}
